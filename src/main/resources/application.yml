server:
  port: 8080

spring:
  datasource:
    # ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: 'jdbc:h2:mem:testdb1;DB_CLOSE_DELAY=-1'
    username: sa
    password: ''
    driver-class-name: org.h2.Driver
  sql:
    init:
      # ALWAYS 始终, EMBEDDED仅嵌入式, NEVER 从不 
      mode: always
      separator: ;
      encoding: UTF-8
      # 数据脚本平台: 模式-${Platform}; 默认是schema和data,当设置h2时加载schema,data, schema-h2和data-h2这4个sql;另:当设置schema和data脚本的时候, platform失效
      platform: h2
      #schema-locations: classpath:db/schema.sql
      #data-locations: classpath:db/data.sql
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true

mybatis:
  mapper-locations: classpath:mapper/*.xml

logging:
  level:
    sql: debug
    org.springframework: info
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.mybatis: debug
    org.mybatis.spring: debug
    org.apache.ibatis.logging.LogFactory: debug
    com.example.demo: DEBUG

druid:
  datasource:
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    driver-class-name: ${spring.datasource.driver-class-name}
    initial-size: 5
    min-idle: 5
    max-active: 20
    max-wait: 60000
    time-between-eviction-runs-millis: 60000
    min-evictable-idle-time-millis: 300000
    validation-query: SELECT 1
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    pool-prepared-statements: true
    max-pool-prepared-statement-per-connection-size: 20
    filter:
      stat:
        enabled: true
      wall:
        enabled: true
      log4j:
        enabled: false
    aop-patterns: com.example.demo.service.*
    ##数据初始化设置
    #表明使用的数据库平台是h2 mysql
    platform: h2
    #进行该配置后，每次启动程序，程序都会运行(表结构) 
    #always为始终执行初始化，embedded只初始化内存数据库(默认值),如h2等，never为不执行初始化
    initialization-mode: always
    sql-script-encoding: utf-8
    schema-locations: classpath:db/schema-h2.sql
    #进行该配置后，每次启动程序，程序都会运行(数据)
    data-locations: classpath:db/data-h2.sql
